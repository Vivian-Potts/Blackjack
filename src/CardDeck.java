import java.util.Random;
import java.util.Scanner;
public class CardDeck {
    Random rand = new Random();
    Scanner scan = new Scanner(System.in);
    //Make our deck, first digit in each array is the amount of cards left, value on right is the value of that card when played in blackjack
    int[][] cards = {{4,2},{4,3},{4,4},{4,5},{4,6},{4,7},{4,8},{4,9},{16,10},{4,123456789}};
    int total;

    int deal(boolean isPlayer) {
        //Reset variables from last time
        total = 0;
        int cardPosition = 0;

        //Count how many cards are in deck by finding the sum of all the numbers on the left in the arrays
        for (int i = 0; i < cards.length; i++) {
            total += cards[i][0];
        }
        //Make a random number between 0 and the size of the deck -1 (Max for new deck would be 51
        cardPosition = rand.nextInt(total - 1);

        //Loop through array, if the value of the left column is less than the position of the card we want to find return the number, otherwise take the left column from the position.
        //This returns the value of the card at the position generated by the previous code
        for (int i = 0; i < cards.length; i++) {
            if (cardPosition < cards[i][0]){
                cards[i][0]--;
                if (cards[i][1] == 123456789 && isPlayer) {

                    while(true){
                        System.out.print("Drew ace, would you like it to be 1 or 11? [1/11]");
                        String ace = scan.nextLine();
                        if(ace.equals("11")){
                            return  11;
                        }
                        if (ace.equals("1")){
                            return 1;
                        }
                    }
                }
                return cards[i][1];
            } else {
                cardPosition -= cards[i][0];
            }
        }

        //If for loop doesn't find a number, print and error message and return 0
        System.out.println("ERROR");
        return 0;
    }

}
